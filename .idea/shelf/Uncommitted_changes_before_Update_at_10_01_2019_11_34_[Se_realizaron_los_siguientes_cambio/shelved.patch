Index: src/Controller/DocumentoController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\nnamespace App\\Controller;\r\n\r\nuse App\\Entity\\FichaProcesos;\r\nuse App\\Entity\\TipoDocumento;\r\nuse App\\Entity\\Usuario;\r\nuse App\\Entity\\Modulo;\r\nuse App\\Entity\\Acceso;\r\nuse App\\Entity\\EstadoDocumento;\r\nuse App\\Entity\\Documento;\r\nuse Symfony\\Component\\HttpFoundation\\Response;\r\nuse Symfony\\Component\\HttpFoundation\\Request;\r\nuse Symfony\\Component\\Routing\\Annotation\\Route;\r\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Method;\r\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller;\r\n\r\nuse Symfony\\Component\\Serializer\\Serializer;\r\nuse Symfony\\Component\\Serializer\\Normalizer\\GetSetMethodNormalizer;\r\nuse Symfony\\Component\\Serializer\\Encoder\\JsonEncoder;\r\nuse Symfony\\Component\\Validator\\Validator\\ValidatorInterface;\r\n\r\n\r\nclass DocumentoController extends Controller\r\n{\r\n    /**\r\n     * @Route(\"/documento\", name=\"documento_listar\")\r\n     * @Method({\"GET\"})\r\n     */\r\n    public function index()\r\n    {\r\n        $userlg = $this->getUser();\r\n        $accesos = $this->getDoctrine()->getRepository(Acceso::class)->findBy(array('fkrol' => $userlg->getFkrol()));\r\n\r\n        $mods = array();\r\n        $children = array();\r\n        $options = array();\r\n        foreach ($accesos as $access) {\r\n            $accdt = (object)$access;\r\n            $item = $this->getDoctrine()->getRepository(Modulo::class)->find($accdt->getFkmodulo()->getId());\r\n            $mods[] = $item;\r\n        }\r\n        $parent = $mods;\r\n        $child = $mods;\r\n        $option = $mods;\r\n\r\n        $permisos = array();\r\n        foreach ($mods as $mdl) {\r\n            $mdldt = (object)$mdl;\r\n            $item = $mdldt->getNombre();\r\n            $permisos[] = $item;\r\n        }\r\n\r\n        $Documento = $this->getDoctrine()->getRepository(Documento::class)->findBy(array('estado' => '1'));\r\n        $FichaProcesos = $this->getDoctrine()->getRepository(FichaProcesos::class)->findBy(array('estado' => '1'));\r\n        $TipoDocumento = $this->getDoctrine()->getRepository(TipoDocumento::class)->findBy(array('estado' => '1'));\r\n        $Usuario = $this->getDoctrine()->getRepository(Usuario::class)->findBy(array('estado' => '1'));\r\n        return $this->render('documento/index.html.twig', array('objects' => $Documento, 'tipo' => $FichaProcesos, 'tipo2' => $TipoDocumento, 'tipo3' => $Usuario, 'parents' => $parent, 'children' => $child, 'options' => $option, 'permisos' => $permisos));\r\n    }\r\n\r\n    /**\r\n     * @Route(\"/documento_insertar\", methods={\"POST\"}, name=\"documento_insertar\")\r\n     */\r\n    public function insertar(ValidatorInterface $validator)\r\n    {\r\n        try {\r\n            $cx = $this->getDoctrine()->getManager();\r\n\r\n            $sx = json_decode($_POST['object'], true);\r\n            $codigo = $sx['codigo'];\r\n            $titulo = $sx['titulo'];\r\n            $versionvigente = $sx['versionvigente'];\r\n            $vinculo = $sx['vinculo'];\r\n            $ficha = $sx['fkficha'];\r\n            $tipo = $sx['fktipo'];\r\n            $aprobador = $sx['fkaprobador'];\r\n            $fechapb = $sx['fechaPublicacion'];\r\n            $carpetaop = $sx['carpetaOperativa'];\r\n\r\n            $Documento = new Documento();\r\n            $Documento->setCodigo($codigo);\r\n            $Documento->setTitulo($titulo);\r\n            $Documento->setVersionvigente($versionvigente);\r\n            $Documento->setVinculo($vinculo);\r\n            $Documento->setFechaPublicacion(new \\DateTime($fechapb));\r\n            $Documento->setCarpetaOperativa($carpetaop);\r\n            $Documento->setEstado(1);\r\n\r\n            \r\n\r\n            $ficha != '' ? $ficha = $this->getDoctrine()->getRepository(FichaProcesos::class)->find($ficha) : $ficha=null;\r\n            $tipo != '' ? $tipo = $this->getDoctrine()->getRepository(TipoDocumento::class)->find($tipo) : $tipo=null;\r\n            $aprobador != '' ? $aprobador = $this->getDoctrine()->getRepository(Usuario::class)->find($aprobador) : $aprobador =null;\r\n                $Documento->setFkficha($ficha);\r\n                $Documento->setFktipo($tipo);\r\n                $Documento->setFkaprobador($aprobador);\r\n\r\n            $errors = $validator->validate($Documento);\r\n            if (count($errors) > 0) {\r\n                $array = array();\r\n                $array['error'] = 'error';\r\n                foreach ($errors as $e) {\r\n                    $array += [$e->getPropertyPath() => $e->getMessage()];\r\n                    // dd($e->getMessage());\r\n                    // dd($e->getPropertyPath()) ;\r\n                }\r\n                return new  Response(json_encode($array));\r\n            }\r\n\r\n            $cx->persist($Documento);\r\n            $cx->flush();\r\n\r\n            $resultado = array('response' => \"El ID registrado es: \" . $Documento->getId() . \".\", 'success' => true,\r\n                'message' => 'Documento registrado correctamente.');\r\n            $resultado = json_encode($resultado);\r\n            return new Response($resultado);\r\n        } catch (Exception $e) {\r\n            echo 'Excepción capturada: ', $e->getMessage(), \"\\n\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @Route(\"/documento_actualizar\", methods={\"POST\"}, name=\"documento_actualizar\")\r\n     */\r\n    public function actualizar()\r\n    {\r\n        try {\r\n            $cx = $this->getDoctrine()->getManager();\r\n\r\n            $sx = json_decode($_POST['object'], true);\r\n            $id = $sx['id'];\r\n            $codigo = $sx['codigo'];\r\n            $titulo = $sx['titulo'];\r\n            $versionvigente = $sx['versionvigente'];\r\n            $vinculo = $sx['vinculo'];\r\n            $ficha = $sx['fkficha'];\r\n            $tipo = $sx['fktipo'];\r\n            $aprobador = $sx['fkaprobador'];\r\n            $fechapb = $sx['fechaPublicacion'];\r\n            $carpetaop = $sx['carpetaOperativa'];\r\n\r\n            $Documento = new Documento();\r\n            $Documento->setId($id);\r\n            $Documento->setCodigo($codigo);\r\n            $Documento->setTitulo($titulo);\r\n            $Documento->setVersionvigente($versionvigente);\r\n            $Documento->setVinculo($vinculo);\r\n            $Documento->setFechaPublicacion(new \\DateTime($fechapb));\r\n            $Documento->setCarpetaOperativa($carpetaop);\r\n            $Documento->setEstado(1);\r\n\r\n            $ficha != '' ? $ficha = $this->getDoctrine()->getRepository(FichaProcesos::class)->find($ficha) : $ficha=null;\r\n            $tipo != '' ? $tipo = $this->getDoctrine()->getRepository(TipoDocumento::class)->find($tipo) : $tipo=null;\r\n            $aprobador != '' ? $aprobador = $this->getDoctrine()->getRepository(Usuario::class)->find($aprobador) : $aprobador =null;\r\n            $Documento->setFkficha($ficha);\r\n            $Documento->setFktipo($tipo);\r\n            $Documento->setFkaprobador($aprobador);\r\n\r\n            $cx->merge($Documento);\r\n            $cx->flush();\r\n\r\n            $resultado = array('success' => true,\r\n                'message' => 'Documento actualizado correctamente.');\r\n            $resultado = json_encode($resultado);\r\n            return new Response($resultado);\r\n        } catch (Exception $e) {\r\n            echo 'Excepción capturada: ', $e->getMessage(), \"\\n\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @Route(\"/documento_editar\", methods={\"POST\"}, name=\"documento_editar\")\r\n     */\r\n    public function editar()\r\n    {\r\n        try {\r\n            $sx = json_decode($_POST['object'], true);\r\n            $id = $sx['id'];\r\n            $Documento = $this->getDoctrine()->getRepository(Documento::class)->find($id);\r\n            $fpb = $Documento->getFechaPublicacion();\r\n            $result = $fpb->format('Y-m-d');\r\n            $sendinf = [\r\n                \"id\" => $Documento->getId(),\r\n                \"codigo\" => $Documento->getCodigo(),\r\n                \"titulo\" => $Documento->getTitulo(),\r\n                \"versionVigente\" => $Documento->getversionVigente(),\r\n                \"vinculo\" => $Documento->getVinculo(),\r\n                \"fechaPublicacion\" => $result,\r\n                \"carpetaOperativa\" => $Documento->getCarpetaOperativa(),\r\n                \"fkficha\" => $Documento->getFkficha(),\r\n                \"fktipo\" => $Documento->getFktipo(),\r\n                \"fkaprobador\" => $Documento->getFkaprobador()\r\n            ];\r\n            $serializer = new Serializer(array(new GetSetMethodNormalizer()), array('json' => new JsonEncoder()));\r\n            $json = $serializer->serialize($sendinf, 'json');\r\n            $resultado = array('response' => $json, 'success' => true,\r\n                'message' => 'Documento listado correctamente.');\r\n            $resultado = json_encode($resultado);\r\n            return new Response($resultado);\r\n        } catch (Exception $e) {\r\n            echo 'Excepción capturada: ', $e->getMessage(), \"\\n\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @Route(\"/documento_eliminar\", methods={\"POST\"}, name=\"documento_eliminar\")\r\n     */\r\n    public function eliminar()\r\n    {\r\n        try {\r\n            $cx = $this->getDoctrine()->getManager();\r\n            $id = $_POST['id'];\r\n            $Documento = $this->getDoctrine()->getRepository(Documento::class)->find($id);\r\n\r\n            $Documento->setEstado(0);\r\n            $cx->persist($Documento);\r\n            $cx->flush();\r\n\r\n            $resultado = array('response' => \"El ID modificado es: \" . $Documento->getId() . \".\", 'success' => true,\r\n                'message' => 'Documento dado de baja correctamente.');\r\n            $resultado = json_encode($resultado);\r\n            return new Response($resultado);\r\n        } catch (Exception $e) {\r\n            echo 'Excepción capturada: ', $e->getMessage(), \"\\n\";\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Controller/DocumentoController.php	(date 1547133046000)
+++ src/Controller/DocumentoController.php	(date 1545834827398)
@@ -122,7 +122,7 @@
     /**
      * @Route("/documento_actualizar", methods={"POST"}, name="documento_actualizar")
      */
-    public function actualizar()
+    public function actualizar(ValidatorInterface $validator)
     {
         try {
             $cx = $this->getDoctrine()->getManager();
@@ -156,6 +156,18 @@
             $Documento->setFktipo($tipo);
             $Documento->setFkaprobador($aprobador);
 
+            $errors = $validator->validate($Documento);
+            if (count($errors) > 0) {
+                $array = array();
+                $array['error'] = 'error';
+                foreach ($errors as $e) {
+                    $array += [$e->getPropertyPath() => $e->getMessage()];
+                    // dd($e->getMessage());
+                    // dd($e->getPropertyPath()) ;
+                }
+                return new  Response(json_encode($array));
+            }
+
             $cx->merge($Documento);
             $cx->flush();
 
