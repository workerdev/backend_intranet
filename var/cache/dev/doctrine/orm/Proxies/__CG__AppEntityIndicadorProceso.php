<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class IndicadorProceso extends \App\Entity\IndicadorProceso implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'id', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'fkficha', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'codigo', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'objetivo', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'descripcion', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'formula', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'fkunidad', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'metamensual', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'metaanual', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'vigente', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'fkresponsable', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'estado'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'id', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'fkficha', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'codigo', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'objetivo', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'descripcion', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'formula', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'fkunidad', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'metamensual', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'metaanual', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'vigente', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'fkresponsable', '' . "\0" . 'App\\Entity\\IndicadorProceso' . "\0" . 'estado'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (IndicadorProceso $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId(string $id): \App\Entity\IndicadorProceso
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getFkficha(): ?\App\Entity\FichaProcesos
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFkficha', []);

        return parent::getFkficha();
    }

    /**
     * {@inheritDoc}
     */
    public function setFkficha(?\App\Entity\FichaProcesos $fkficha): \App\Entity\IndicadorProceso
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFkficha', [$fkficha]);

        return parent::setFkficha($fkficha);
    }

    /**
     * {@inheritDoc}
     */
    public function getCodigo(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodigo', []);

        return parent::getCodigo();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodigo(string $codigo): \App\Entity\IndicadorProceso
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodigo', [$codigo]);

        return parent::setCodigo($codigo);
    }

    /**
     * {@inheritDoc}
     */
    public function getObjetivo(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObjetivo', []);

        return parent::getObjetivo();
    }

    /**
     * {@inheritDoc}
     */
    public function setObjetivo(string $objetivo): \App\Entity\IndicadorProceso
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setObjetivo', [$objetivo]);

        return parent::setObjetivo($objetivo);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescripcion(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescripcion', []);

        return parent::getDescripcion();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescripcion(string $descripcion): \App\Entity\IndicadorProceso
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescripcion', [$descripcion]);

        return parent::setDescripcion($descripcion);
    }

    /**
     * {@inheritDoc}
     */
    public function getFormula(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormula', []);

        return parent::getFormula();
    }

    /**
     * {@inheritDoc}
     */
    public function setFormula(string $formula): \App\Entity\IndicadorProceso
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFormula', [$formula]);

        return parent::setFormula($formula);
    }

    /**
     * {@inheritDoc}
     */
    public function getFkunidad(): ?\App\Entity\UnidadMedida
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFkunidad', []);

        return parent::getFkunidad();
    }

    /**
     * {@inheritDoc}
     */
    public function setFkunidad(?\App\Entity\UnidadMedida $fkunidad): \App\Entity\IndicadorProceso
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFkunidad', [$fkunidad]);

        return parent::setFkunidad($fkunidad);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetamensual(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetamensual', []);

        return parent::getMetamensual();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetamensual(string $metamensual): \App\Entity\IndicadorProceso
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetamensual', [$metamensual]);

        return parent::setMetamensual($metamensual);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaanual(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaanual', []);

        return parent::getMetaanual();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaanual(string $metaanual): \App\Entity\IndicadorProceso
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaanual', [$metaanual]);

        return parent::setMetaanual($metaanual);
    }

    /**
     * {@inheritDoc}
     */
    public function getVigente(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVigente', []);

        return parent::getVigente();
    }

    /**
     * {@inheritDoc}
     */
    public function setVigente(string $vigente): \App\Entity\IndicadorProceso
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVigente', [$vigente]);

        return parent::setVigente($vigente);
    }

    /**
     * {@inheritDoc}
     */
    public function getFkresponsable(): ?\App\Entity\Usuario
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFkresponsable', []);

        return parent::getFkresponsable();
    }

    /**
     * {@inheritDoc}
     */
    public function setFkresponsable(?\App\Entity\Usuario $fkresponsable): \App\Entity\IndicadorProceso
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFkresponsable', [$fkresponsable]);

        return parent::setFkresponsable($fkresponsable);
    }

    /**
     * {@inheritDoc}
     */
    public function getEstado(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEstado', []);

        return parent::getEstado();
    }

    /**
     * {@inheritDoc}
     */
    public function setEstado(int $estado): \App\Entity\IndicadorProceso
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEstado', [$estado]);

        return parent::setEstado($estado);
    }

}
